name: Push directory to another repository from Windows host
description: >-
  Push files from current repo to another repo, customzied for Windows environment.

inputs:
  source-before-directory:
    description: Source before directory from the origin directory
    required: false
  source-directory:
    description: Source directory from the origin directory
    required: true
  destination-github-username:
    description: Name of the destination username/organization
    required: true
  destination-repository-name:
    description: Destination repository
    required: true
  user-email:
    description: Email for the git commit
    required: true
  github-server:
    description: 'Github server'
    default: 'github.com'
    required: false
  user-name:
    description: >-
      [Optional] Name for the git commit. Defaults to the destination
      username/organization name
    required: false
    default: ''
  destination-repository-username:
    description: '[Optional] Username/organization for the destination repository'
    required: false
    default: ''
  target-branch:
    description: >-
      [Optional] set target branch name for the destination repository. Defaults
      to "main"
    default: main
    required: false
  commit-message:
    description: >-
      [Optional] commit message for the output repository. ORIGIN_COMMIT is
      replaced by the URL@commit in the origin repo
    default: Update from ORIGIN_COMMIT
    required: false
  target-directory:
    description: '[Optional] The directory to wipe and replace in the target repository'
    default: ''
    required: false

runs:
  using: "composite"
  # args:
  #   - '${{ inputs.source-before-directory }}'
  #   - '${{ inputs.source-directory }}'
  #   - '${{ inputs.destination-github-username }}'
  #   - '${{ inputs.destination-repository-name }}'
  #   - '${{ inputs.github-server }}'
  #   - '${{ inputs.user-email }}'
  #   - '${{ inputs.user-name }}'
  #   - '${{ inputs.destination-repository-username }}'
  #   - '${{ inputs.target-branch }}'
  #   - '${{ inputs.commit-message }}'
  #   - '${{ inputs.target-directory }}'
  steps:
    # ssh setup
    - run: mkdir -p $HOME/.ssh
      shell: bash
    - run: DEPLOY_KEY_FILE="$HOME/.ssh/deploy_key"
      shell: bash
    - run: echo "${SSH_DEPLOY_KEY}" > "$DEPLOY_KEY_FILE"
      shell: bash
    - run: chmod 600 "$DEPLOY_KEY_FILE"
      shell: bash
    - run: SSH_KNOWN_HOSTS_FILE="$HOME/.ssh/known_hosts"
      shell: bash
    - run: export GIT_SSH_COMMAND="ssh -i "$DEPLOY_KEY_FILE" -o UserKnownHostsFile=$SSH_KNOWN_HOSTS_FILE"
      shell: bash
    - run: GIT_CMD_REPOSITORY="git@${{ inputs.github-server }}:${{ inputs.destination-github-username }}/${{ inputs.destination-repository-name }}.git"
      shell: bash

    # - run: $GIT_CMD_REPOSITORY="git@${{ inputs.github-server }}:${{ inputs.destination-github-username }}/${{ inputs.destination-repository-name }}.git"
      # shell: pwsh

    # git setup
    # clone target repo and copy files
    - run: set CLONE_DIR=$(mktemp -d)
      shell: cmd
    - run: git config --global user.email "${{ inputs.user-email }}"
      shell: cmd
    - run: git config --global user.name "${{ inputs.user-name }}"
      shell: cmd
    - run: git clone --single-branch --depth 1 --branch "${{ inputs.target-branch }}" %GIT_CMD_REPOSITORY% %CLONE_DIR%
      shell: cmd 

    - run: git config --global --add safe.directory $CLONE_DIR
      shell: cmd
    - run: cp -ra ${{ inputs.source-directory }}/* $CLONE_DIR/${{ inputs.target-directory }}
      shell: cmd

    # commit and push
    - run: cd $CLONE_DIR 
      shell: cmd
    - run: git add .
      shell: cmd
    # git diff-index : to avoid doing the git commit failing if there are no changes to be commit
    - run: git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"
      shell: cmd
    - run: git push $GIT_CMD_REPOSITORY --set-upstream "${{ inputs.target-branch }}"
      shell: cmd


branding:
  icon: git-commit
  color: green
